# Generated by Django 5.2.1 on 2025-05-17 16:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "db_table": "category",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="category_name_d601b7_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=160, unique=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("expiration_date", models.DateTimeField(blank=True, null=True)),
                ("stock", models.IntegerField()),
                ("archived", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "product",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="product_name_c4c985_idx"),
                    models.Index(
                        fields=["expiration_date"], name="product_expirat_cdb3c4_idx"
                    ),
                ],
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("price__gte", 0)), name="price_gte_0"
                    ),
                    models.CheckConstraint(
                        condition=models.Q(("stock__gte", 0)), name="stock_gte_0"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Receipt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total", models.DecimalField(decimal_places=2, max_digits=12)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("archived", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "receipt",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["created_at"], name="receipt_created_4c99c4_idx"
                    )
                ],
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("total__gte", 0)), name="total_gte_0"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.category",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="inventory.product",
                    ),
                ),
            ],
            options={
                "db_table": "product_category",
                "ordering": ["product", "category"],
                "indexes": [
                    models.Index(
                        fields=["product", "category"],
                        name="product_cat_product_1e61a7_idx",
                    )
                ],
                "unique_together": {("product", "category")},
            },
        ),
        migrations.CreateModel(
            name="ReceiptProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(default=1)),
                (
                    "price_at_purchase",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="inventory.product",
                    ),
                ),
                (
                    "receipt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="inventory.receipt",
                    ),
                ),
            ],
            options={
                "db_table": "receipt_product",
                "ordering": ["receipt", "product"],
                "indexes": [
                    models.Index(
                        fields=["receipt", "product"],
                        name="receipt_pro_receipt_2662cd_idx",
                    )
                ],
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("quantity__gt", 0)), name="quantity_gt_0"
                    ),
                    models.CheckConstraint(
                        condition=models.Q(("price_at_purchase__gte", 0)),
                        name="price_at_purchase_gte_0",
                    ),
                ],
                "unique_together": {("receipt", "product")},
            },
        ),
    ]
